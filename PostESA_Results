# Results of Dorazio et al. 2006 method for estimating species richness with remaining TEAM sites (post-ESA abstract) using SDSC server

# 2011 YAS CT data

> print(fitparallel, digits=3)
Inference for Bugs model at "/home/lbeaudrot/work/Species-Richness/MultiSpeciesSiteOccModel.txt", fit using JAGS,
 4 chains, each with 250000 iterations (first 125000 discarded), n.thin = 3
 n.sims = 166668 iterations saved
             mean     sd     2.5%      25%      50%      75%    97.5%  Rhat n.eff
alpha      -2.775  1.040   -5.237   -3.367   -2.618   -2.046   -1.132 1.002  2500
beta       -4.501  0.491   -5.691   -4.746   -4.430   -4.168   -3.765 1.006  4200
N          62.766 19.370   40.000   49.000   58.000   71.000  116.000 1.002  5400
omega       0.379  0.128    0.214    0.291    0.350    0.435    0.720 1.001  6300
rho         0.744  0.239    0.098    0.644    0.817    0.918    0.992 1.001  9700
sigma.u     2.394  0.600    1.453    1.963    2.313    2.738    3.792 1.002  4200
sigma.v     0.921  0.301    0.500    0.715    0.869    1.063    1.656 1.001  6900
deviance 1393.419 61.382 1282.234 1350.826 1390.210 1432.771 1521.991 1.001  9200

For each parameter, n.eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor (at convergence, Rhat=1).

DIC info (using the rule, pD = var(deviance)/2)
pD = 1883.2 and DIC = 3276.7
DIC is an estimate of expected predictive error (lower deviance is better).

> sp.mean
[1] 62.77
> sp.median
[1] 58
> sp.mode
[1] 50



# 2011 CSN CT data

> print(fitparallel, digits=3)
Inference for Bugs model at "/home/lbeaudrot/work/Species-Richness/MultiSpeciesSiteOccModel.txt", fit using JAGS,
 4 chains, each with 250000 iterations (first 125000 discarded), n.thin = 3
 n.sims = 166668 iterations saved
             mean     sd    2.5%      25%      50%      75%    97.5%  Rhat n.eff
alpha      -1.781  0.582  -3.220   -2.046   -1.687   -1.399   -0.933 1.003  1400
beta       -3.324  0.207  -3.794   -3.444   -3.303   -3.181   -2.976 1.003  1500
N          35.729  5.789  30.000   32.000   34.000   37.000   51.000 1.003  1400
omega       0.216  0.050   0.140    0.182    0.209    0.240    0.332 1.002  3000
rho         0.376  0.305  -0.301    0.179    0.413    0.608    0.858 1.002  3800
sigma.u     1.625  0.465   0.946    1.296    1.546    1.866    2.774 1.003  1500
sigma.v     0.561  0.168   0.307    0.443    0.536    0.652    0.959 1.002  1800
deviance 1055.805 42.018 977.913 1026.750 1054.283 1083.354 1142.375 1.001  5400

For each parameter, n.eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor (at convergence, Rhat=1).

DIC info (using the rule, pD = var(deviance)/2)
pD = 882.3 and DIC = 1938.1
DIC is an estimate of expected predictive error (lower deviance is better).
> #plot(fitparallel)
> 
> sp.mean <- round(mean(fitparallel$sims.list$N), digits=2)
> sp.median <- median(fitparallel$sims.list$N)
> sp.mode <- as.numeric(names(sort(table(fitparallel$sims.list$N), decreasing=TRUE))[1])
> 
> sp.mean
[1] 35.73
> sp.median
[1] 34
> sp.mode
[1] 32


# COU 2011 CT results

> print(fitparallel, digits=3)
Inference for Bugs model at "/home/lbeaudrot/work/Species-Richness/MultiSpeciesSiteOccModel.txt", fit using JAGS,
 4 chains, each with 250000 iterations (first 125000 discarded), n.thin = 3
 n.sims = 166668 iterations saved
             mean     sd     2.5%      25%      50%      75%    97.5%  Rhat n.eff
alpha      -1.528  0.586   -2.863   -1.860   -1.460   -1.136   -0.545 1.006   540
beta       -4.364  0.450   -5.492   -4.584   -4.285   -4.051   -3.729 1.037   130
N          45.288  7.471   37.000   40.000   43.000   48.000   65.000 1.004   870
omega       0.256  0.058    0.167    0.216    0.247    0.286    0.394 1.003  1400
rho         0.690  0.235    0.096    0.575    0.747    0.865    0.976 1.010   400
sigma.u     1.300  0.419    0.637    1.005    1.245    1.538    2.269 1.007   480
sigma.v     0.923  0.356    0.431    0.672    0.854    1.099    1.805 1.020   150
deviance 1167.706 58.285 1059.774 1127.374 1165.758 1205.821 1287.955 1.008   360

For each parameter, n.eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor (at convergence, Rhat=1).

DIC info (using the rule, pD = var(deviance)/2)
pD = 1683.9 and DIC = 2851.6
DIC is an estimate of expected predictive error (lower deviance is better).
> #plot(fitparallel)
> 
> sp.mean <- round(mean(fitparallel$sims.list$N), digits=2)
> sp.median <- median(fitparallel$sims.list$N)
> sp.mode <- as.numeric(names(sort(table(fitparallel$sims.list$N), decreasing=TRUE))[1])
> 
> sp.mean
[1] 45.29
> sp.median
[1] 43
> sp.mode
[1] 40



# KRP 2011 CT data 

> print(fitparallel, digits=3)
Inference for Bugs model at "/home/lbeaudrot/work/Species-Richness/MultiSpeciesSiteOccModel.txt", fit using JAGS,
 4 chains, each with 250000 iterations (first 125000 discarded), n.thin = 3
 n.sims = 166668 iterations saved
             mean     sd     2.5%      25%      50%      75%    97.5%  Rhat n.eff
alpha      -1.682  0.964   -4.084   -2.142   -1.547   -1.058   -0.149 1.004  1900
beta       -4.414  0.548   -5.766   -4.691   -4.323   -4.039   -3.605 1.004   930
N          36.472 10.844   26.000   30.000   34.000   39.000   65.000 1.004  1000
omega       0.235  0.080    0.134    0.184    0.219    0.264    0.439 1.003  1300
rho         0.645  0.304   -0.158    0.507    0.735    0.871    0.979 1.005   890
sigma.u     2.077  0.704    1.105    1.594    1.948    2.419    3.787 1.004   890
sigma.v     1.160  0.396    0.608    0.880    1.085    1.358    2.129 1.002  2000
deviance 1222.277 54.688 1122.404 1184.152 1219.694 1257.663 1336.543 1.002  3000

For each parameter, n.eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor (at convergence, Rhat=1).

DIC info (using the rule, pD = var(deviance)/2)
pD = 1493.9 and DIC = 2716.2
DIC is an estimate of expected predictive error (lower deviance is better).
> #plot(fitparallel)
> 
> sp.mean <- round(mean(fitparallel$sims.list$N), digits=2)
> sp.median <- median(fitparallel$sims.list$N)
> sp.mode <- as.numeric(names(sort(table(fitparallel$sims.list$N), decreasing=TRUE))[1])
> 
> sp.mean
[1] 36.47
> sp.median
[1] 34
> sp.mode
[1] 30



